{"name":"PyWebhooks","tagline":"PyWebhooks - A Webhooks Service","body":"## PyWebhooks.io\r\n\r\n_A simple webhooks service, minimal features, minimal security, proof of concept_\r\n\r\n[![Build Status](https://travis-ci.org/chadlung/pywebhooks.svg?branch=master)](https://travis-ci.org/chadlung/pywebhooks)\r\n\r\n**Note:** PyWebhooks is ideally deployed on an internal private cloud/network where you\r\nknow and trust the end users and services using it. It should not be considered\r\nsecure enough (currently) to be a publicly deployed service.\r\n\r\nDon't like something? Need a feature? Please submit a pull request complete with\r\ntests and an update to the [readme](https://github.com/chadlung/pywebhooks/blob/master/README.rst) if required.\r\n\r\nIn order to run PyWebhooks you'll need to have [RethinkDB](http://rethinkdb.com)\r\nand [Redis](http://redis.io) installed on a server or server(s). RethinkDB is\r\nused to store the account, webooks, etc. data. Redis is used by\r\n[Celery](http://http://www.celeryproject.org) to handle the calls to the\r\nwebhook endpoints.\r\n\r\n**Note:** PyWebhooks has been tested on Ubuntu 14.04 and OS X.\r\nPyWebhooks has been tested with Python 3.4, prior Python 3.x versions have not\r\nbeen tested and Python 2.x support is not planned.\r\n\r\n###Why PyWebhooks?\r\n\r\nI looked all over for a project that did something similar to this. You can find\r\nlots of code to listen for webhooks as well as some code for sending webhooks\r\nbut I couldn't find anything that wrapped it into a complete package where you could\r\nrun a server to allow for adding new accounts, letting those users create their\r\nown webhooks and then allow others to listen (subscribe) to those webhooks.\r\n\r\nApache 2 Licensed\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}